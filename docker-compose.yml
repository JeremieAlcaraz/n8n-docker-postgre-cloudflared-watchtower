services:
  # ==============================================
  # Service: n8n-db
  # PostgreSQL 16 Alpine for n8n
  # Persists data via Docker volume
  # ==============================================
  n8n-db:
    image: postgres:16-alpine
    container_name: n8n-db
    restart: always
    env_file:
      - .env
    volumes:
      - n8n_db_data:/var/lib/postgresql/data
    healthcheck:
      # ⚠️  string unique → variables $POSTGRES_USER et $POSTGRES_DB
      #     sont évaluées par le shell
      # ✅ On teste juste « le serveur répond‑il ? »
      test: "pg_isready -q"
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 10
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  # ==============================================
  # Service: n8n
  # Principal d'exécution des workflows n8n
  # Monte un volume pour la configuration et les données
  # ==============================================
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    depends_on:
      n8n-db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  # ==============================================
  # Service: cloudflared
  # Tunnel Cloudflare pour exposer n8n en HTTPS
  # Gère automatiquement le tunnel configuré
  # ==============================================
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    env_file:
      - .env
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # ⬅️ Explicitement exclus
    volumes:
      - cloudflared_config:/home/nonroot/.cloudflared  # ⬅️ Persist config si nécessaire

  # ==============================================
  # Service: watchtower
  # Mise à jour automatique des conteneurs Docker
  # Vérifie et nettoie les images obsolètes toutes les 5 minutes
  # ==============================================
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --schedule "0 3 */2 * *" --label-enable

volumes:
  n8n_data:
  n8n_db_data:
  cloudflared_config:  # ← Ajoutez cette ligne

